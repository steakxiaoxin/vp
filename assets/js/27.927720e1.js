(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{359:function(t,e,a){"use strict";a.r(e);var r=a(0),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://juejin.im/post/5df5bcea6fb9a016091def69",target:"_blank",rel:"noopener noreferrer"}},[t._v("(1.6w字)浏览器与前端性能灵魂之问，请问你能接得住几个？（上）"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://mp.weixin.qq.com/s/a4TLWp7khAoNo1Xct5YIMA",target:"_blank",rel:"noopener noreferrer"}},[t._v("点亮前端必会网络知识点"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"浏览器相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器相关"}},[t._v("#")]),t._v(" 浏览器相关")]),t._v(" "),a("h3",{attrs:{id:"_2-浏览器缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-浏览器缓存"}},[t._v("#")]),t._v(" 2. 浏览器缓存")]),t._v(" "),a("ol",[a("li",[t._v("强缓存 200 (优先级从高到低分别是 Pragma -> Cache-Control -> Expires)\n"),a("ul",[a("li",[t._v("Pragma：支持 http1.0；可设置 no-cache，表示不缓存资源；优先级最高")]),t._v(" "),a("li",[t._v("Cache-Control：支持 http1.1；可设置 no-cache、max-age = 3600 (s)；优先级中等")]),t._v(" "),a("li",[t._v("Expires：支持 http1.0；可设置一个格林尼治时间；优先级最低")])])]),t._v(" "),a("li",[t._v("协商缓存 304\n"),a("ul",[a("li",[t._v("ETag/If-None-Match 高")]),t._v(" "),a("li",[t._v("Last-Modified/If-Modified-Since 低")])])])]),t._v(" "),a("p",[t._v("总结:")]),t._v(" "),a("ul",[a("li",[t._v("首先通过 "),a("code",[t._v("Cache-Control")]),t._v(" 验证强缓存是否可用，如果强缓存可用，直接使用")]),t._v(" "),a("li",[t._v("否则进入协商缓存，即发送 HTTP 请求，服务器通过请求头中的 "),a("code",[t._v("Last-Modified")]),t._v("或者"),a("code",[t._v("ETag")]),t._v("字段检查资源是否更新\n"),a("ul",[a("li",[t._v("若资源更新，返回资源和200状态码")]),t._v(" "),a("li",[t._v("否则，返回304，告诉浏览器直接从缓存获取资源")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-本地存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-本地存储"}},[t._v("#")]),t._v(" 3. 本地存储")]),t._v(" "),a("ol",[a("li",[t._v("cookie")]),t._v(" "),a("li",[t._v("localstorage")]),t._v(" "),a("li",[t._v("sessionstorage")]),t._v(" "),a("li",[t._v("IndexedDB")])]),t._v(" "),a("h3",{attrs:{id:"_4-重绘回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-重绘回流"}},[t._v("#")]),t._v(" 4. 重绘回流")]),t._v(" "),a("p",[t._v("https://juejin.im/post/5df5bcea6fb9a016091def69#heading-54\nhttps://juejin.im/post/5df1e312f265da33d039d06d#heading-67")]),t._v(" "),a("h3",{attrs:{id:"_5-xss-和-csrf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-xss-和-csrf"}},[t._v("#")]),t._v(" 5. XSS 和 CSRF")]),t._v(" "),a("h3",{attrs:{id:"_6-https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-https"}},[t._v("#")]),t._v(" 6. HTTPS")]),t._v(" "),a("h3",{attrs:{id:"_7-跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-跨域"}},[t._v("#")]),t._v(" 7. 跨域")]),t._v(" "),a("p",[t._v('4.4 GET 和 POST 的区别\n(1) GET 请求在浏览器回退和刷新时是无害的，而 POST 请求会告知用户数据会被重新提交；\n(2) GET 请求可以收藏为书签，POST 请求不可以收藏为书签；\n(3) GET 请求可以被缓存，POST 请求不可以被缓存，除非在响应头中包含合适的 Cache-Control/Expires 字段，但是不建议缓存 POST 请求，其不满足幂等性，每次调用都会对服务器资源造成影响；\n(4) GET 请求一般不具有请求体，因此只能进行 url 编码，而 POST 请求支持多种编码方式。\n(5) GET 请求的参数可以被保留在浏览器的历史中，POST 请求不会被保留；\n(6) GET 请求因为是向 URL 添加数据，不同的浏览器厂商，代理服务器，web 服务器都可能会有自己的长度限制，而 POST 请求无长度限制；\n(7) GET 请求只允许 ASCII 字符，POST 请求无限制，支持二进制数据；\n(8) GET 请求的安全性较差，数据被暴露在浏览器的 URL 中，所以不能用来传递敏感信息，POST 请求的安全性较好，数据不会暴露在 URL 中；\n(9) GET 请求具有幂等性(多次请求不会对资源造成影响)，POST 请求不幂等；\n(10) GET 请求一般不具有请求体，请求中一般不包含 100-continue 协议，所以只会发一次请求，而 POST 请求在发送数据到服务端之前允许双方"握手"，客户端先发送 Expect:100-continue 消息，询问服务端是否愿意接收数据，接收到服务端正确的 100-continue 应答后才会将请求体发送给服务端，服务端再响应 200 返回数据。')]),t._v(" "),a("p",[t._v("5.6 跨标签页的通讯方式有哪些\n(1) BroadCast Channel\n(2) Service Worker\n(3) LocalStorage + window.onstorage 监听\n(4) Shared Worker + 定时器轮询(setInterval)\n(5) IndexedDB + 定时器轮询(setInterval)\n(6) cookie + 定时器轮询(setInterval)\n(7) window.open + window.postMessage\n(8) Websocket")]),t._v(" "),a("br"),t._v(" "),a("Valine")],1)}),[],!1,null,null,null);e.default=n.exports}}]);