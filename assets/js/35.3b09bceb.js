(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{367:function(t,v,_){"use strict";_.r(v);var r=_(0),e=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[_("img",{attrs:{src:"https://i.loli.net/2020/02/23/W258tAfM16axhDU.jpg",alt:"Tfrl8rH-QoU.jpg"}})]),t._v(" "),_("h2",{attrs:{id:"面向对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[t._v("#")]),t._v(" 面向对象")]),t._v(" "),_("p",[t._v("类、实例、简单抽象、数据结构化")]),t._v(" "),_("h3",{attrs:{id:"三要素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三要素"}},[t._v("#")]),t._v(" 三要素")]),t._v(" "),_("p",[t._v("继承、封装、多态")]),t._v(" "),_("h3",{attrs:{id:"uml-类图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#uml-类图"}},[t._v("#")]),t._v(" UML 类图")]),t._v(" "),_("h4",{attrs:{id:"表现方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#表现方式"}},[t._v("#")]),t._v(" 表现方式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("类名")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("+ public 属性名 A: 类型"),_("br"),t._v("# protected 属性名 B: 类型"),_("br"),t._v("- private 属性名 C: 类型")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("+ public 方法名 A(参数1, 参数2): 返回值类型"),_("br"),t._v("# protected 方法名 B(参数1, 参数2): 返回值类型"),_("br"),t._v("- private 方法名 C(参数1): 返回值类型")])])])]),t._v(" "),_("h4",{attrs:{id:"关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关系"}},[t._v("#")]),t._v(" 关系")]),t._v(" "),_("ul",[_("li",[t._v("泛化，表示继承，(空心箭头，指向父类)")]),t._v(" "),_("li",[t._v("关联，表示引用，(实心箭头，指向源头)")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://i.loli.net/2020/02/23/Lx8q4SrVCXMan7D.png",alt:"image.png"}})]),t._v(" "),_("h2",{attrs:{id:"设计原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#设计原则"}},[t._v("#")]),t._v(" 设计原则")]),t._v(" "),_("blockquote",[_("p",[t._v("《UNIX/LINUX设计哲学》 准则：")]),t._v(" "),_("ul",[_("li",[t._v("小即是美")]),t._v(" "),_("li",[t._v("让每一个程序只做好一件事")]),t._v(" "),_("li",[t._v("尽快建立原型")]),t._v(" "),_("li",[t._v("舍高效率而取可移植性")]),t._v(" "),_("li",[t._v("采用纯文本文件来存储数据")]),t._v(" "),_("li",[t._v("充分利用软件的杠杆效应(软件复用)")]),t._v(" "),_("li",[t._v("使用Shell脚本来提高杠杆效应和可移植性")]),t._v(" "),_("li",[t._v("避免强制性的用户界面")]),t._v(" "),_("li",[t._v("让每一个程序都成为过滤器")])])]),t._v(" "),_("p",[t._v("SOLID。")]),t._v(" "),_("ul",[_("li",[_("em",[_("strong",[t._v("S - 单一职责原则")])]),t._v(" "),_("ul",[_("li",[t._v("一个程序只做好一件事")]),t._v(" "),_("li",[t._v("如果功能过于复杂就拆分开，每个部分保持独立")])])]),t._v(" "),_("li",[_("em",[_("strong",[t._v("O - 开放封闭原则")])]),t._v(" "),_("ul",[_("li",[t._v("对扩展开放，对修改封闭")]),t._v(" "),_("li",[t._v("增加需求时，扩展新代码，而非修改已有代码")]),t._v(" "),_("li",[t._v("软件设计的终极目标")])])]),t._v(" "),_("li",[t._v("L - 李氏置换原则\n"),_("ul",[_("li",[t._v("子类能覆盖父类")]),t._v(" "),_("li",[t._v("父类能出现的地方子类就能出现")]),t._v(" "),_("li",[t._v("js 中使用较少")])])]),t._v(" "),_("li",[t._v("I - 接口独立原则\n"),_("ul",[_("li",[t._v("保持接口的单一独立，避免出现“胖接口")]),t._v(" "),_("li",[t._v("类似单一职责原则，这里更关注接口")])])]),t._v(" "),_("li",[t._v("D - 依赖导致原则\n"),_("ul",[_("li",[t._v("面向接口编程，依赖于抽象而不依赖于具体")]),t._v(" "),_("li",[t._v("使用方只关注接口而不关注具体类的实现")]),t._v(" "),_("li",[t._v("js 中时间较少")])])])]),t._v(" "),_("p",[_("strong",[t._v("重点是 S 和 O")]),t._v("。用 Promise 来说明 S O")]),t._v(" "),_("ul",[_("li",[t._v("单一职责原则：每个 then 中的逻辑只做好一件事")]),t._v(" "),_("li",[t._v("开放封闭原则：如果新增需求，扩展 then。对扩展开放，对修改封闭。")])]),t._v(" "),_("h2",{attrs:{id:"设计模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("类名")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("模式")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("创建型")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[_("strong",[t._v("工厂模式")]),_("br"),t._v("单例模式"),_("br"),t._v("原型模式")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("结构型")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("适配器模式"),_("br"),_("strong",[t._v("装饰器模式")]),_("br"),t._v("代理模式"),_("br"),t._v("外观模式"),_("br"),t._v("桥接模式"),_("br"),t._v("组合模式"),_("br"),t._v("享元模式")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("行为型")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[_("strong",[t._v("观察者模式")]),_("br"),t._v("迭代器模式"),_("br"),t._v("策略模式"),_("br"),t._v("模板方法模式"),_("br"),t._v("职责链模式"),_("br"),t._v("命令模式"),_("br"),t._v("备忘录模式"),_("br"),t._v("状态模式"),_("br"),t._v("访问者模式"),_("br"),t._v("中介者模式"),_("br"),t._v("解释器模式")])])])])])}),[],!1,null,null,null);v.default=e.exports}}]);