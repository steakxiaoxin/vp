(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{357:function(_,v,t){"use strict";t.r(v);var a=t(0),e=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("p",[t("img",{attrs:{src:"https://i.loli.net/2019/12/25/a8DerxfSF1ZXIA7.jpg",alt:""}})]),_._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://juejin.im/post/5df5bcea6fb9a016091def69",target:"_blank",rel:"noopener noreferrer"}},[_._v("(1.6w字)浏览器与前端性能灵魂之问，请问你能接得住几个？（上）"),t("OutboundLink")],1)]),_._v(" "),t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/a4TLWp7khAoNo1Xct5YIMA",target:"_blank",rel:"noopener noreferrer"}},[_._v("点亮前端必会网络知识点"),t("OutboundLink")],1)])]),_._v(" "),t("h2",{attrs:{id:"从输入-url-到展示经历了什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从输入-url-到展示经历了什么"}},[_._v("#")]),_._v(" 从输入 URL 到展示经历了什么")]),_._v(" "),t("h4",{attrs:{id:"丐版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#丐版"}},[_._v("#")]),_._v(" 丐版")]),_._v(" "),t("ol",[t("li",[_._v("DNS 解析")]),_._v(" "),t("li",[_._v("TCP 连接")]),_._v(" "),t("li",[_._v("HTTP 请求")]),_._v(" "),t("li",[_._v("服务器响应")]),_._v(" "),t("li",[_._v("客户端渲染\n"),t("ol",[t("li",[_._v("处理 HTML 标记并构建 DOM 树。")]),_._v(" "),t("li",[_._v("处理 CSS 标记并构建 CSSOM 树。")]),_._v(" "),t("li",[_._v("将 DOM 与 CSSOM 合并成一个渲染树。")]),_._v(" "),t("li",[_._v("根据渲染树来布局，计算每个节点的几何信息，并绘制到屏幕上。")])])])]),_._v(" "),t("h4",{attrs:{id:"详版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#详版"}},[_._v("#")]),_._v(" 详版")]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/ljianshu/Blog/issues/24",target:"_blank",rel:"noopener noreferrer"}},[_._v("浪里行舟-从 URL 输入到页面展现到底发生什么"),t("OutboundLink")],1)]),_._v(" "),t("li",[t("a",{attrs:{href:"https://juejin.im/post/5df5bcea6fb9a016091def69#heading-24",target:"_blank",rel:"noopener noreferrer"}},[_._v("神三元-浏览器与前端性能灵魂之问"),t("OutboundLink")],1)]),_._v(" "),t("li",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/86426969",target:"_blank",rel:"noopener noreferrer"}},[_._v("面试官，不要再问我三次握手和四次挥手"),t("OutboundLink")],1)])]),_._v(" "),t("h2",{attrs:{id:"重绘与回流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重绘与回流"}},[_._v("#")]),_._v(" 重绘与回流")]),_._v(" "),t("p",[_._v("当元素的样式发生变化时，浏览器需要触发更新，重新绘制元素。这个过程中有两种类型的操作，即重绘与回流。")]),_._v(" "),t("ul",[t("li",[t("p",[t("strong",[_._v("重绘(repaint)")]),_._v(": 当元素样式的改变不影响布局时，浏览器将使用重绘对元素进行更新，此时由于只需要UI层面的重新像素绘制，因此 "),t("strong",[_._v("损耗较少")])])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("回流(reflow)")]),_._v(": 当元素的尺寸、结构或触发某些属性时，浏览器会重新渲染页面，称为回流。此时，浏览器需要重新经过计算，计算后还需要重新页面布局，因此是较重的操作。")]),_._v(" "),t("p",[_._v("触发"),t("strong",[_._v("回流")]),_._v("的操作:")]),_._v(" "),t("ul",[t("li",[_._v("页面初次渲染")]),_._v(" "),t("li",[_._v("浏览器窗口大小改变")]),_._v(" "),t("li",[_._v("元素尺寸、位置、内容发生改变")]),_._v(" "),t("li",[_._v("元素字体大小变化")]),_._v(" "),t("li",[_._v("添加或者删除可见的 dom 元素")]),_._v(" "),t("li",[_._v("激活 CSS 伪类（例如：:hover）")]),_._v(" "),t("li",[_._v("查询某些属性或调用某些方法( 手动触发刷新队列 )\n"),t("ul",[t("li",[_._v("clientWidth、clientHeight、clientTop、clientLeft")]),_._v(" "),t("li",[_._v("offsetWidth、offsetHeight、offsetTop、offsetLeft")]),_._v(" "),t("li",[_._v("scrollWidth、scrollHeight、scrollTop、scrollLeft")]),_._v(" "),t("li",[_._v("getComputedStyle()")]),_._v(" "),t("li",[_._v("getBoundingClientRect()")]),_._v(" "),t("li",[_._v("scrollTo()")])])])])])]),_._v(" "),t("p",[t("strong",[_._v("回流必定触发重绘，重绘不一定触发回流。重绘的开销较小，回流的代价较高。")])]),_._v(" "),t("h4",{attrs:{id:"最佳实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[_._v("#")]),_._v(" 最佳实践:")]),_._v(" "),t("ul",[t("li",[_._v("css\n"),t("ul",[t("li",[_._v("避免使用"),t("code",[_._v("table")]),_._v("布局，table部分的改变会引起整个table的重绘")]),_._v(" "),t("li",[_._v("将动画效果应用到"),t("code",[_._v("position")]),_._v("属性为"),t("code",[_._v("absolute")]),_._v("或"),t("code",[_._v("fixed")]),_._v("的元素上")])])]),_._v(" "),t("li",[_._v("javascript\n"),t("ul",[t("li",[_._v("避免频繁操作样式，可汇总后统一 "),t("strong",[_._v("一次修改")])]),_._v(" "),t("li",[_._v("尽量使用"),t("code",[_._v("class")]),_._v("进行样式修改")]),_._v(" "),t("li",[_._v("减少"),t("code",[_._v("dom")]),_._v("的增删次数，可使用 "),t("strong",[_._v("字符串")]),_._v(" 或者 "),t("code",[_._v("documentFragment")]),_._v(" 一次性插入")]),_._v(" "),t("li",[_._v("极限优化时，修改样式可将其"),t("code",[_._v("display: none")]),_._v("后修改")]),_._v(" "),t("li",[_._v("避免多次触发上面提到的那些会触发回流的方法，可以的话尽量用 "),t("strong",[_._v("变量存住")])])])])]),_._v(" "),t("h2",{attrs:{id:"http-缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-缓存"}},[_._v("#")]),_._v(" http 缓存")]),_._v(" "),t("p",[_._v("缓存可以减少网络 IO 消耗，提高访问速度。")]),_._v(" "),t("ol",[t("li",[_._v("强缓存 200 (优先级从高到低分别是 Pragma -> Cache-Control -> Expires)\n"),t("ul",[t("li",[_._v("Pragma：支持 http1.0；可设置 no-cache，表示不缓存资源；优先级最高")]),_._v(" "),t("li",[_._v("Cache-Control：支持 http1.1；可设置 no-cache、max-age = 3600 (s)；优先级中等")]),_._v(" "),t("li",[_._v("Expires：支持 http1.0；可设置一个格林尼治时间；优先级最低")])])]),_._v(" "),t("li",[_._v("协商缓存 304\n"),t("ul",[t("li",[_._v("ETag/If-None-Match 高")]),_._v(" "),t("li",[_._v("Last-Modified/If-Modified-Since 低")])])])]),_._v(" "),t("p",[_._v("总结:")]),_._v(" "),t("ul",[t("li",[_._v("首先通过 "),t("code",[_._v("Cache-Control")]),_._v(" 验证强缓存是否可用，如果强缓存可用，直接使用")]),_._v(" "),t("li",[_._v("否则进入协商缓存，即发送 HTTP 请求，服务器通过请求头中的 "),t("code",[_._v("Last-Modified")]),_._v("或者"),t("code",[_._v("ETag")]),_._v("字段检查资源是否更新\n"),t("ul",[t("li",[_._v("若资源更新，返回资源和200状态码")]),_._v(" "),t("li",[_._v("否则，返回304，告诉浏览器直接从缓存获取资源")])])])]),_._v(" "),t("h2",{attrs:{id:"get-和-post"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post"}},[_._v("#")]),_._v(" get 和 post")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://i.loli.net/2020/02/09/ufApI3H861oxSDb.png",alt:"image.png"}})]),_._v(" "),t("h2",{attrs:{id:"多标签通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多标签通信"}},[_._v("#")]),_._v(" 多标签通信")]),_._v(" "),t("ul",[t("li",[_._v("window.open + window.postMessage")]),_._v(" "),t("li",[_._v("LocalStorage + window.onstorage 监听")]),_._v(" "),t("li",[_._v("cookie + 定时器轮询(setInterval)")]),_._v(" "),t("li",[_._v("Websocket")]),_._v(" "),t("li",[_._v("BroadCast Channel")]),_._v(" "),t("li",[_._v("Service Worker")]),_._v(" "),t("li",[_._v("Shared Worker + 定时器轮询(setInterval)")]),_._v(" "),t("li",[_._v("IndexedDB + 定时器轮询(setInterval)")])]),_._v(" "),t("h2",{attrs:{id:"跨域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[_._v("#")]),_._v(" 跨域")]),_._v(" "),t("p",[_._v("浏览器出于安全考虑，有同源策略。即 "),t("strong",[_._v("协议、域名、端口")]),_._v(" 有一个不同就是跨域，Ajax 请求可以发，但响应会被拦截。浏览器只允许跨域加载三个标签：img、link、script")]),_._v(" "),t("ul",[t("li",[_._v("JSONP\n"),t("ul",[t("li",[_._v("利用"),t("code",[_._v("script")]),_._v("标签不受跨域限制的特点")]),_._v(" "),t("li",[_._v("缺点是只能支持 get 请求")])])]),_._v(" "),t("li",[_._v("设置 CORS\n"),t("ul",[t("li",[_._v("设置 Access-Control-Allow-Origin：*")]),_._v(" "),t("li",[_._v('通过"预检"请求来知道服务端是否允许跨域请求，请求方法option')]),_._v(" "),t("li",[_._v("支持所有类型的HTTP请求")])])]),_._v(" "),t("li",[_._v("postMessage")]),_._v(" "),t("li",[_._v("nginx 代理跨域：同源策略对服务器不加限制")]),_._v(" "),t("li",[_._v("iframe跨域")]),_._v(" "),t("li",[_._v("websocket")])]),_._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.im/post/5a2f92c65188253e2470f16d",target:"_blank",rel:"noopener noreferrer"}},[_._v("正确面对跨域，别慌"),t("OutboundLink")],1)]),_._v(" "),t("h2",{attrs:{id:"存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储"}},[_._v("#")]),_._v(" 存储")]),_._v(" "),t("h4",{attrs:{id:"cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[_._v("#")]),_._v(" cookie")]),_._v(" "),t("ul",[t("li",[_._v("4kb")]),_._v(" "),t("li",[_._v("服务端通过 Set-Cookie 设置")]),_._v(" "),t("li",[_._v("添加 http-only 属性，不能通过 js 操作 cookie，减少 xss")]),_._v(" "),t("li",[_._v("同源 -- 协议、域名、端口")])]),_._v(" "),t("h4",{attrs:{id:"localstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[_._v("#")]),_._v(" localStorage")]),_._v(" "),t("ul",[t("li",[_._v("5Mb")]),_._v(" "),t("li",[_._v("长期存在。模拟实现过期功能")]),_._v(" "),t("li",[_._v("同源 -- 协议、域名、端口")])]),_._v(" "),t("h4",{attrs:{id:"sessionstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[_._v("#")]),_._v(" sessionStorage")]),_._v(" "),t("ul",[t("li",[_._v("5Mb")]),_._v(" "),t("li",[_._v("会话级、tab 级别")]),_._v(" "),t("li",[_._v("同源 -- 协议、域名、端口、窗口")])]),_._v(" "),t("h4",{attrs:{id:"indexdb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#indexdb"}},[_._v("#")]),_._v(" indexDB")]),_._v(" "),t("h2",{attrs:{id:"web-安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#web-安全"}},[_._v("#")]),_._v(" web 安全")]),_._v(" "),t("h4",{attrs:{id:"_1、xss"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、xss"}},[_._v("#")]),_._v(" 1、XSS")]),_._v(" "),t("p",[_._v("XSS 全称是跨站脚本攻击(Cross Site Scripting)，是一种代码注入攻击。")]),_._v(" "),t("p",[_._v("分类:")]),_._v(" "),t("ul",[t("li",[_._v("存储型 => 攻击者通过把代码提交到后台数据库中;当用户下次打开的时候就会从后台接收这些恶意的代码")]),_._v(" "),t("li",[_._v("反射型 => 恶意链接，通过在请求地址上加入恶心的 HTML 代码")]),_._v(" "),t("li",[_._v("dom 型 => 通过一些 api 向网站注入一些恶意的 HTML 代码")])]),_._v(" "),t("p",[_._v("防范:")]),_._v(" "),t("ul",[t("li",[_._v("字符转义")]),_._v(" "),t("li",[_._v("禁止 JavaScript 操作 cookie，设置 httponly")]),_._v(" "),t("li",[_._v("CSP 白名单")])]),_._v(" "),t("h4",{attrs:{id:"_2、csrf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、csrf"}},[_._v("#")]),_._v(" 2、CSRF")]),_._v(" "),t("p",[_._v("CSRF 全称是跨站请求伪造(Cross-site request forgery)，是一种利用 cookie 特性的攻击。")]),_._v(" "),t("p",[_._v("引诱用户打开黑客的网站，在黑客的网站中，利用用户的登录状态发起的跨站请求。")]),_._v(" "),t("p",[_._v("防范：")]),_._v(" "),t("ul",[t("li",[_._v("利用 Cookie 的 "),t("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2019/09/cookie-samesite.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("SameSite"),t("OutboundLink")],1),_._v(" 属性")]),_._v(" "),t("li",[_._v("验证请求的来源站点")]),_._v(" "),t("li",[_._v("token 验证")])]),_._v(" "),t("h4",{attrs:{id:"_3、sql-注入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、sql-注入"}},[_._v("#")]),_._v(" 3、SQL 注入")]),_._v(" "),t("p",[_._v("用户输入的数据存在拼接 SQL 语句从而出现访问数据库的操作。")]),_._v(" "),t("p",[_._v("防范：过滤")]),_._v(" "),t("h4",{attrs:{id:"_4、点击劫持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、点击劫持"}},[_._v("#")]),_._v(" 4、点击劫持")]),_._v(" "),t("p",[_._v("在某些操作的按钮上加了一层透明的 iframe")]),_._v(" "),t("p",[_._v("防范：")]),_._v(" "),t("ul",[t("li",[_._v("服务端添加 X-Frame-Options 响应头,这个 HTTP 响应头是为了防御用 iframe 嵌套的点击劫持攻击。这样浏览器就会阻止嵌入网页的渲染。")]),_._v(" "),t("li",[_._v("JS 判断顶层视口的域名是不是和本页面的域名一致，不一致则不允许操作，top.location.hostname === self.location.hostname；")]),_._v(" "),t("li",[_._v("敏感操作使用更复杂的步骤（验证码、输入项目名称以删除）。")])]),_._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.im/post/5dca1b376fb9a04a9f11c82e",target:"_blank",rel:"noopener noreferrer"}},[_._v("Web 安全总结(面试必备良药)"),t("OutboundLink")],1)]),_._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.im/post/5da44c5de51d45783a772a22",target:"_blank",rel:"noopener noreferrer"}},[_._v("面试经常被问的 web 安全问题"),t("OutboundLink")],1)]),_._v(" "),t("h2",{attrs:{id:"tcp-http-https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-http-https"}},[_._v("#")]),_._v(" tcp http https")]),_._v(" "),t("h4",{attrs:{id:"tcp-传输控制协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-传输控制协议"}},[_._v("#")]),_._v(" tcp 传输控制协议")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("传输层协议；定义的是数据传输和连接方式的规范")])]),_._v(" "),t("li",[t("p",[_._v("建立连接：三次握手")]),_._v(" "),t("ul",[t("li",[_._v("客户端–发送带有SYN标志的数据包–一次握手–服务端")]),_._v(" "),t("li",[_._v("服务端–发送带有SYN/ACK标志的数据包–二次握手–客户端")]),_._v(" "),t("li",[_._v("客户端–发送带有带有ACK标志的数据包–三次握手–服务端")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://i.loli.net/2020/02/27/ZcyAK3OmjIMbtXY.png",alt:"image.png"}})]),_._v(" "),t("ul",[t("li",[_._v("(为了方便描述我们将主动发起请求的172.16.50.72:65076 主机称为客户端，将返回数据的主机172.16.17.94:8080称为服务器。)")]),_._v(" "),t("li",[_._v("第一次握手: 建立连接。客户端发送连接请求，发送SYN报文，将seq设置为0。然后，客户端进入SYN_SEND状态，等待服务器的确认。")]),_._v(" "),t("li",[_._v("第二次握手: 服务器收到客户端的SYN报文段。需要对这个SYN报文段进行确认，发送ACK报文，将ack设置为1。同时，自己还要发送SYN请求信息，将seq为0。服务器端将上述所有信息一并发送给客户端，此时服务器进入SYN_RECV状态。")]),_._v(" "),t("li",[_._v("第三次握手: 客户端收到服务器的ACK和SYN报文后，进行确认，然后将ack设置为1，seq设置为1，向服务器发送ACK报文段，这个报文段发送完毕以后，客户端和服务器端都进入ESTABLISHED状态，完成TCP三次握手。")])])]),_._v(" "),t("li",[t("p",[_._v("断开连接：四次挥手")]),_._v(" "),t("ul",[t("li",[_._v("客户端-发送一个FIN，用来关闭客户端到服务器的数据传送")]),_._v(" "),t("li",[_._v("服务器-收到这个FIN，它发回一个ACK，确认序号为收到的序号加1 。和SYN一样，一个FIN将占用一个序号")]),_._v(" "),t("li",[_._v("服务器-关闭与客户端的连接，发送一个FIN给客户端")]),_._v(" "),t("li",[_._v("客户端-发回ACK报文确认，并将确认序号设置为收到序号加1")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://i.loli.net/2020/02/27/6sE4ric1I5azVUZ.png",alt:"image.png"}})]),_._v(" "),t("ul",[t("li",[_._v("第一次挥手：客户端向服务器发送一个FIN报文段，将设置seq为160和ack为112，;此时，客户端进入 FIN_WAIT_1状态,这表示客户端没有数据要发送服务器了，请求关闭连接;")]),_._v(" "),t("li",[_._v("第二次挥手：服务器收到了客户端发送的FIN报文段，向客户端回一个ACK报文段，ack设置为1，seq设置为112;服务器进入了CLOSE_WAIT状态，客户端收到服务器返回的ACK报文后，进入FIN_WAIT_2状态;")]),_._v(" "),t("li",[_._v("第三次挥手：服务器会观察自己是否还有数据没有发送给客户端，如果有，先把数据发送给客户端，再发送FIN报文；如果没有，那么服务器直接发送FIN报文给客户端。请求关闭连接，同时服务器进入LAST_ACK状态;")]),_._v(" "),t("li",[_._v("第四次挥手：客户端收到服务器发送的FIN报文段，向服务器发送ACK报文段，将seq设置为161，将ack设置为113，然后客户端进入TIME_WAIT状态;服务器收到客户端的ACK报文段以后，就关闭连接;此时，客户端等待2MSL后依然没有收到回复，则证明Server端已正常关闭，客户端也可以关闭连接了。")])])])]),_._v(" "),t("h4",{attrs:{id:"http-80-https-443-超文本传送协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-80-https-443-超文本传送协议"}},[_._v("#")]),_._v(" http 80/https 443 超文本传送协议")]),_._v(" "),t("ul",[t("li",[_._v("应用层协议；定义的是传输数据的内容的规范")]),_._v(" "),t("li",[_._v("基于tcp；客户端每次发送请求都需要服务器返回响应，在请求结束后，会主动释放连接，从建立连接到关闭连接的过程称为“一次连接”，短连接，无状态\n"),t("ul",[t("li",[_._v("何为无状态？指浏览器每次向服务器发起请求的时候，不是通过一个连接，而是每次都建立一个新的连接。如果是一个连接的话，服务器进程中就能保持住这个连接并且在内存中记住一些信息状态。而每次请求结束后，连接就关闭，相关的内容就释放了，所以记不住任何状态，成为无状态连接。")])])]),_._v(" "),t("li",[_._v("HTTPS是在应用层和传输层之间，增加了一个安全套接层SSL/TLS")]),_._v(" "),t("li",[t("strong",[_._v("HTTP + 加密 + 认证 + 完整性保护 = HTTPS")])]),_._v(" "),t("li",[_._v("协议格式：请求和响应都是 起始行、消息头和消息体")])]),_._v(" "),t("h4",{attrs:{id:"现代浏览器在与服务器建立了一个-tcp-连接后是否会在一个-http-请求完成后断开？什么情况下会断开？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#现代浏览器在与服务器建立了一个-tcp-连接后是否会在一个-http-请求完成后断开？什么情况下会断开？"}},[_._v("#")]),_._v(" 现代浏览器在与服务器建立了一个 TCP 连接后是否会在一个 HTTP 请求完成后断开？什么情况下会断开？")]),_._v(" "),t("ul",[t("li",[_._v("默认情况下建立 TCP 连接不会断开，只有在请求报头中声明 Connection: close 才会在请求完成后关闭连接。\n"),t("ul",[t("li",[_._v("在 HTTP/1.0 中，一个服务器在发送完一个 HTTP 响应后，会断开 TCP 链接。但是这样每次请求都会重新建立和断开 TCP 连接，代价过大。HTTP/1.1 就把 Connection 头写进标准，并且默认开启持久连接，除非请求中写明 Connection: close，那么浏览器和服务器之间是会维持一段时间的 TCP 连接，不会一个请求结束就断掉。")])])])]),_._v(" "),t("h4",{attrs:{id:"一个-tcp-连接可以对应几个-http-请求？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一个-tcp-连接可以对应几个-http-请求？"}},[_._v("#")]),_._v(" 一个 TCP 连接可以对应几个 HTTP 请求？")]),_._v(" "),t("ul",[t("li",[_._v("如果维持连接，一个 TCP 连接是可以发送多个 HTTP 请求的")])]),_._v(" "),t("h4",{attrs:{id:"一个-tcp-连接中-http-请求发送可以一起发送么（比如一起发三个请求，再三个响应一起接收）？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一个-tcp-连接中-http-请求发送可以一起发送么（比如一起发三个请求，再三个响应一起接收）？"}},[_._v("#")]),_._v(" 一个 TCP 连接中 HTTP 请求发送可以一起发送么（比如一起发三个请求，再三个响应一起接收）？")]),_._v(" "),t("ul",[t("li",[_._v("在 HTTP/1.1 存在 Pipelining 技术可以完成这个多个请求同时发送，但是由于浏览器默认关闭，所以可以认为这是不可行的。在 HTTP2 中由于 Multiplexing 特点的存在，多个 HTTP 请求可以在同一个 TCP 连接中并行进行。")])]),_._v(" "),t("h4",{attrs:{id:"浏览器对同一-host-建立-tcp-连接到数量有没有限制？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器对同一-host-建立-tcp-连接到数量有没有限制？"}},[_._v("#")]),_._v(" 浏览器对同一 Host 建立 TCP 连接到数量有没有限制？")]),_._v(" "),t("ul",[t("li",[_._v("有。Chrome 最多允许对同一个 Host 建立六个 TCP 连接。不同的浏览器有一些区别。")])]),_._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.im/post/5ad4094e6fb9a028d7011069",target:"_blank",rel:"noopener noreferrer"}},[_._v("小哥哥,小姐姐,我有一份tcp、http面试指南你要吗？"),t("OutboundLink")],1)]),_._v(" "),t("p",[t("a",{attrs:{href:"https://www.jianshu.com/p/0ac515088cec",target:"_blank",rel:"noopener noreferrer"}},[_._v("面试官问我：一个 TCP 连接可以发多少个 HTTP 请求？我竟然回答不上来.."),t("OutboundLink")],1)]),_._v(" "),t("h2",{attrs:{id:"http-状态码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-状态码"}},[_._v("#")]),_._v(" http 状态码")]),_._v(" "),t("p",[_._v("(注 : 🌶 为常用)")]),_._v(" "),t("h4",{attrs:{id:"_1xx（临时响应）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1xx（临时响应）"}},[_._v("#")]),_._v(" 1xx（临时响应）")]),_._v(" "),t("p",[_._v("表示临时响应并需要请求者继续执行操作的状态码。")]),_._v(" "),t("ul",[t("li",[_._v("100 : 继续。 请求者应当继续提出请求。服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。")]),_._v(" "),t("li",[_._v("101 : 切换协议。 请求者已要求服务器切换协议，服务器已确认并准备切换。")])]),_._v(" "),t("h4",{attrs:{id:"_2xx（成功）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2xx（成功）"}},[_._v("#")]),_._v(" 2xx（成功）")]),_._v(" "),t("p",[_._v("表示成功处理了请求的状态码。")]),_._v(" "),t("ul",[t("li",[_._v("200 :🌶 成功。 服务器已经成功处理了请求。通常，这表示服务器提供了请求的网页。")]),_._v(" "),t("li",[_._v("201 : 已创建。 请求成功并且服务器创建了新的资源")]),_._v(" "),t("li",[_._v("202 : 已接受。 服务器已接受请求，但尚未处理")]),_._v(" "),t("li",[_._v("203 : 非授权信息。 服务器已经成功处理了请求，但返回的信息可能来自另一来源")]),_._v(" "),t("li",[_._v("204 : 无内容。 服务器成功处理了请求，但没有返回任何内容")]),_._v(" "),t("li",[_._v("205 : 重置内容。 服务器成功处理了请求，但没有返回任何内容")]),_._v(" "),t("li",[_._v("206 : 部分内容。 服务器成功处理了部分 GET 请求")])]),_._v(" "),t("h4",{attrs:{id:"_3xx（重定向）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3xx（重定向）"}},[_._v("#")]),_._v(" 3xx（重定向）")]),_._v(" "),t("p",[_._v("表示要完成请求，需要进一步操作。通常，这些状态代码用来重定向。")]),_._v(" "),t("ul",[t("li",[_._v("300 : 多种选择。 针对请求，服务器可执行多种操作。服务器可根据请求者（user agent）选择一项操作，或提供操作列表供请求者选择。")]),_._v(" "),t("li",[_._v("301 :🌶 永久移动。 请求的网页已永久移动到新位置。服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。")]),_._v(" "),t("li",[_._v("302 :🌶 临时移动。 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求")]),_._v(" "),t("li",[_._v("303 : 查看其它位置。 请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码")]),_._v(" "),t("li",[_._v("304 :🌶 协商缓存。 自动上次请求后，请求的网页未修改过。服务器返回此响应，不会返回网页的内容")]),_._v(" "),t("li",[_._v("305 : 使用代理。 请求者只能使用代理访问请求的网页。如果服务器返回此响应，还表示请求者应使用代理")]),_._v(" "),t("li",[_._v("307 : 临时性重定向。 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有的位置来进行以后的请求")])]),_._v(" "),t("h4",{attrs:{id:"_4xx（请求错误）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4xx（请求错误）"}},[_._v("#")]),_._v(" 4xx（请求错误）")]),_._v(" "),t("p",[_._v("这些状态码表示请求可能出错，妨碍了服务器的处理。")]),_._v(" "),t("ul",[t("li",[_._v("400 :🌶 错误请求。 服务器不理解请求的语法")]),_._v(" "),t("li",[_._v("401 :🌶 未授权。 请求要求身份验证。对于需要登录的网页，服务器可能返回此响应")]),_._v(" "),t("li",[_._v("403 :🌶 禁止。 服务器拒绝请求")]),_._v(" "),t("li",[_._v("404 :🌶 未找到。 服务器找不到请求的网页")]),_._v(" "),t("li",[_._v("405 : 方法禁用。 禁用请求中指定的方法")]),_._v(" "),t("li",[_._v("406 : 不接受。 无法使用请求的内容特性响应请求的网页")]),_._v(" "),t("li",[_._v("407 : 需要代理授权。 此状态码与 401（未授权）类似，但指定请求者应当授权使用代理")]),_._v(" "),t("li",[_._v("408 : 请求超时。 服务器等候请求时发生超时")]),_._v(" "),t("li",[_._v("409 : 冲突。 服务器在完成请求时发生冲突。服务器必须在响应中包含有关冲突的信息。")]),_._v(" "),t("li",[_._v("410 : 已删除。 如果请求的资源已永久删除，服务器就会返回此响应")]),_._v(" "),t("li",[_._v("411 : 需要有效长度。 服务器不接受不含有效内容长度标头字段的请求")]),_._v(" "),t("li",[_._v("412 : 未满足前提条件。 服务器未满足请求者在请求者设置的其中一个前提条件")]),_._v(" "),t("li",[_._v("413 : 请求实体过大。 服务器无法处理请求，因为请求实体过大，超出了服务器的处理能力")]),_._v(" "),t("li",[_._v("414 : 请求的 URI 过长。 请求的 URI（通常为网址）过长，服务器无法处理")]),_._v(" "),t("li",[_._v("415 : 不支持媒体类型。 请求的格式不受请求页面的支持")]),_._v(" "),t("li",[_._v("416 : 请求范围不符合要求。 如果页面无法提供请求的范围，则服务器会返回此状态码")]),_._v(" "),t("li",[_._v("417 : 未满足期望值。 服务器未满足“期望”请求标头字段的要求")])]),_._v(" "),t("h4",{attrs:{id:"_5xx（服务器错误）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5xx（服务器错误）"}},[_._v("#")]),_._v(" 5xx（服务器错误）")]),_._v(" "),t("p",[_._v("这些状态码表示服务器在尝试处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。")]),_._v(" "),t("ul",[t("li",[_._v("500 :🌶 服务器内部错误。 服务器遇到错误，无法完成请求")]),_._v(" "),t("li",[_._v("501 : 尚未实施。 服务器不具备完成请求的功能。例如，服务器无法识别请求方法时可能会返回此代码")]),_._v(" "),t("li",[_._v("502 :🌶 错误网关。 服务器作为网关或代理，从上游服务器无法收到无效响应")]),_._v(" "),t("li",[_._v("503 : 服务器不可用。 服务器目前无法使用（由于超载或者停机维护）。通常，这只是暂时状态")]),_._v(" "),t("li",[_._v("504 : 网关超时。 服务器作为网关代理，但是没有及时从上游服务器收到请求")]),_._v(" "),t("li",[_._v("505 : HTTP 版本不受支持。 服务器不支持请求中所用的 HTTP 协议版本")])])])}),[],!1,null,null,null);v.default=e.exports}}]);